// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ddd.domain.Implements;

namespace ddd.api.Migrations
{
    [DbContext(typeof(BalanceEFCoreContext))]
    [Migration("20190801073330_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ddd.domain.dbentity.BalanceInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BlongAccount");

                    b.Property<string>("Code");

                    b.Property<DateTimeOffset>("CreateTime");

                    b.Property<bool>("IsValid");

                    b.Property<Guid>("MerchantId");

                    b.Property<int>("Source");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("BalanceInfo");
                });

            modelBuilder.Entity("ddd.domain.dbentity.BalanceInfo", b =>
                {
                    b.OwnsOne("ddd.domain.dbentity.MoneyInfo", "MoneyInfo", b1 =>
                        {
                            b1.Property<Guid?>("BalanceInfoId");

                            b1.Property<decimal>("Money");

                            b1.Property<decimal>("ServiceCharge");

                            b1.Property<decimal>("ServiceRate");

                            b1.Property<decimal>("TotleMoney");

                            b1.ToTable("BalanceInfo");

                            b1.HasOne("ddd.domain.dbentity.BalanceInfo")
                                .WithOne("MoneyInfo")
                                .HasForeignKey("ddd.domain.dbentity.MoneyInfo", "BalanceInfoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("ddd.domain.dbentity.PersonInfo", "PersonInfo", b1 =>
                        {
                            b1.Property<Guid?>("BalanceInfoId");

                            b1.Property<string>("BankCard");

                            b1.Property<string>("IdCard");

                            b1.Property<string>("Name");

                            b1.Property<string>("PhoneNum");

                            b1.ToTable("BalanceInfo");

                            b1.HasOne("ddd.domain.dbentity.BalanceInfo")
                                .WithOne("PersonInfo")
                                .HasForeignKey("ddd.domain.dbentity.PersonInfo", "BalanceInfoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
